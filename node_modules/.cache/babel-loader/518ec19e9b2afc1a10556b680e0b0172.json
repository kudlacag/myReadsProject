{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\achme\\\\OneDrive\\\\Desktop\\\\myreadsproject\\\\myreads\\\\starter\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport \"./App.css\";\nimport { useState, useEffect, Fragment } from \"react\";\nimport { getAll, update } from \"./BooksAPI\";\nimport { Routes, Route, Link } from \"react-router-dom\";\nimport PropTypes from 'prop-types';\nimport SearchsBooks from \"./components/SearchBooks\";\nimport Shelves from \"./components/Shelves\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst App = () => {\n  _s();\n\n  const [mapOfIdBooks, setMapOfIdBooks] = useState([]);\n  const [mergedBooks, setMergedBooks] = useState([]);\n  const [mapOfIdToBooks, setMapOfIdToBooks] = useState(new Map());\n  const [books, setBooks] = useState([]);\n  useEffect(() => {\n    const allBooks = async () => {\n      const res = await getAll();\n      return setBooks(res);\n      setMapOfIdToBooks(createMapOfBooks(res));\n    };\n\n    allBooks();\n  }, []);\n  useEffect(() => {\n    const mixData = books.map(book => {\n      if (mapOfIdBooks.includes(book.id)) {\n        return mapOfIdToBooks.get(book.id);\n      } else {\n        return book;\n      }\n    });\n  });\n\n  const moveAtherShelf = (book, shelfTo) => {\n    const putShelf = books.map(bk => {\n      // console.log(bk);\n      if (bk.id === book.id) {\n        book.shelf = shelfTo;\n        return book;\n      }\n\n      return bk;\n    });\n    setBooks(putShelf);\n    update(book, shelfTo);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app\",\n    children: /*#__PURE__*/_jsxDEV(Routes, {\n      children: [/*#__PURE__*/_jsxDEV(Route, {\n        exact: true,\n        path: \"/\",\n        element: /*#__PURE__*/_jsxDEV(Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"list-books-title\",\n            children: /*#__PURE__*/_jsxDEV(\"h1\", {\n              children: \"MyReads\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 64,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"list-books-content\",\n            children: [/*#__PURE__*/_jsxDEV(Shelves, {\n              books: books,\n              moveAtherShelf: moveAtherShelf\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 67,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"open-search\",\n              children: /*#__PURE__*/_jsxDEV(Link, {\n                to: \"/search\",\n                children: /*#__PURE__*/_jsxDEV(\"button\", {\n                  children: \"Add A Book\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 70,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 69,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 68,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        exact: true,\n        path: \"/search\",\n        element: /*#__PURE__*/_jsxDEV(SearchsBooks, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 46\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 5\n  }, this);\n};\n\n_s(App, \"8VFagCS1T2y6iyh1odtjByYXYEI=\");\n\n_c = App;\nApp.propTypes = {\n  books: PropTypes.array,\n  moveAtherShelf: PropTypes.func\n};\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/Users/achme/OneDrive/Desktop/myreadsproject/myreads/starter/src/App.js"],"names":["useState","useEffect","Fragment","getAll","update","Routes","Route","Link","PropTypes","SearchsBooks","Shelves","App","mapOfIdBooks","setMapOfIdBooks","mergedBooks","setMergedBooks","mapOfIdToBooks","setMapOfIdToBooks","Map","books","setBooks","allBooks","res","createMapOfBooks","mixData","map","book","includes","id","get","moveAtherShelf","shelfTo","putShelf","bk","shelf","propTypes","array","func"],"mappings":"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","sourcesContent":["import \"./App.css\";\r\nimport { useState, useEffect, Fragment } from \"react\";\r\nimport { getAll, update } from \"./BooksAPI\";\r\nimport { Routes, Route, Link } from \"react-router-dom\";\r\nimport PropTypes from 'prop-types';\r\nimport SearchsBooks from \"./components/SearchBooks\";\r\nimport Shelves from \"./components/Shelves\";\r\n\r\n\r\nconst App = () => {\r\n\r\nconst [mapOfIdBooks, setMapOfIdBooks] = useState([]);\r\nconst [mergedBooks, setMergedBooks] = useState([]);\r\n\r\nconst [mapOfIdToBooks, setMapOfIdToBooks ] = useState(new Map());\r\n  const [books, setBooks] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const allBooks = async () => {\r\n      const res = await getAll();\r\n\r\n      return setBooks(res);\r\n      setMapOfIdToBooks( createMapOfBooks(res));\r\n    };\r\n    allBooks();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    const mixData = books.map(book => {\r\n      if(mapOfIdBooks.includes(book.id)){\r\n        return mapOfIdToBooks.get(book.id)\r\n      } else{\r\n        return book;\r\n      }\r\n    })\r\n  })\r\n\r\n\r\n  const moveAtherShelf = (book,  shelfTo) => {\r\n    const putShelf = books.map((bk) => {\r\n      // console.log(bk);\r\n      if (bk.id === book.id) {\r\n     \r\n          book.shelf = shelfTo;\r\n          return book;\r\n    \r\n      }\r\n      return bk;\r\n    });\r\n    setBooks(putShelf);\r\n    update(book, shelfTo);\r\n  };\r\n\r\n\r\n  return (\r\n    <div className=\"app\">\r\n      <Routes>\r\n        <Route\r\n          exact\r\n          path=\"/\"\r\n          element={\r\n            <Fragment>\r\n              <div className=\"list-books-title\">\r\n                <h1>MyReads</h1>\r\n              </div>\r\n              <div className=\"list-books-content\">\r\n                <Shelves books={books} moveAtherShelf={moveAtherShelf} />\r\n                <div className=\"open-search\">\r\n                  <Link to=\"/search\">\r\n                    <button>Add A Book</button>\r\n                  </Link>\r\n                </div>\r\n              </div>\r\n            </Fragment>\r\n          }\r\n        />\r\n\r\n        <Route exact path=\"/search\" element={<SearchsBooks />} />\r\n      </Routes>\r\n    </div>\r\n  );\r\n};\r\n\r\nApp.propTypes = {\r\n  books: PropTypes.array,\r\n  moveAtherShelf: PropTypes.func\r\n\r\n}\r\n\r\nexport default App;\r\n"]},"metadata":{},"sourceType":"module"}
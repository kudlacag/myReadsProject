{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\achme\\\\OneDrive\\\\Desktop\\\\myreadsproject\\\\myreads\\\\starter\\\\src\\\\components\\\\SearchBooks.js\",\n    _s = $RefreshSig$();\n\nimport React, { Fragment, useEffect, useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport { search } from '../BooksAPI';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst SearchBooks = _ref => {\n  _s();\n\n  let {\n    setShowSearchPage\n  } = _ref;\n  const [books, setBooks] = useState([]);\n  const [value, setValue] = useState('');\n  useEffect(() => {\n    const dataFetch = async () => {\n      if (value) {\n        const res = await search(value);\n        setBooks(res);\n      }\n    };\n\n    dataFetch();\n  }, [value]);\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: value,\n      onChange: e => setValue(e.target.value),\n      placeholder: \"Search by title, author, or ISBN\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 5\n    }, this), console.log(books)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 7\n  }, this);\n};\n\n_s(SearchBooks, \"qW5Ldb98+Gxf0cwktHwNRZ84Oe4=\");\n\n_c = SearchBooks;\nexport default SearchBooks;\n\nvar _c;\n\n$RefreshReg$(_c, \"SearchBooks\");","map":{"version":3,"sources":["C:/Users/achme/OneDrive/Desktop/myreadsproject/myreads/starter/src/components/SearchBooks.js"],"names":["React","Fragment","useEffect","useState","Link","search","SearchBooks","setShowSearchPage","books","setBooks","value","setValue","dataFetch","res","e","target","console","log"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,EAAoCC,QAApC,QAAoD,OAApD;AACA,SAAQC,IAAR,QAAmB,kBAAnB;AACA,SAAQC,MAAR,QAAqB,aAArB;;;AAEA,MAAOC,WAAW,GAAG,QAA0B;AAAA;;AAAA,MAAzB;AAAEC,IAAAA;AAAF,GAAyB;AAE3C,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBN,QAAQ,CAAC,EAAD,CAAlC;AAEH,QAAM,CAACO,KAAD,EAAQC,QAAR,IAAoBR,QAAQ,CAAC,EAAD,CAAlC;AAEDD,EAAAA,SAAS,CAAC,MAAK;AACd,UAAMU,SAAS,GAAG,YAAY;AAC3B,UAAGF,KAAH,EAAS;AACL,cAAMG,GAAG,GAAG,MAAMR,MAAM,CAACK,KAAD,CAAxB;AACAD,QAAAA,QAAQ,CAACI,GAAD,CAAR;AACH;AACH,KALD;;AAMAD,IAAAA,SAAS;AAET,GATQ,EASN,CAACF,KAAD,CATM,CAAT;AAWE,sBAEI,QAAC,QAAD;AAAA,4BACF;AACA,MAAA,IAAI,EAAC,MADL;AACY,MAAA,KAAK,EAAEA,KADnB;AAC0B,MAAA,QAAQ,EAAGI,CAAD,IAAQH,QAAQ,CAACG,CAAC,CAACC,MAAF,CAASL,KAAV,CADpD;AAEA,MAAA,WAAW,EAAC;AAFZ;AAAA;AAAA;AAAA;AAAA,YADE,EAKHM,OAAO,CAACC,GAAR,CAAYT,KAAZ,CALG;AAAA;AAAA;AAAA;AAAA;AAAA,UAFJ;AASE,CA1BJ;;GAAOF,W;;KAAAA,W;AA4BP,eAAeA,WAAf","sourcesContent":["import React, {Fragment, useEffect, useState } from 'react';\r\nimport {Link} from 'react-router-dom'\r\nimport {search} from '../BooksAPI'\r\n\r\nconst  SearchBooks = ({ setShowSearchPage}) => {\r\n\r\n    const [books, setBooks] = useState([])\r\n \r\n const [value, setValue] = useState('');\r\n\r\nuseEffect(()=> {\r\n const dataFetch = async () => {\r\n    if(value){\r\n        const res = await search(value);\r\n        setBooks(res)\r\n    }\r\n }\r\n dataFetch()\r\n\r\n}, [value])\r\n\r\n  return (\r\n \r\n      <Fragment>\r\n    <input\r\n    type=\"text\" value={value} onChange={(e) =>  setValue(e.target.value)}\r\n    placeholder=\"Search by title, author, or ISBN\"\r\n  />\r\n  {console.log(books)}\r\n  </Fragment>\r\n  )}\r\n\r\nexport default SearchBooks"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\achme\\\\OneDrive\\\\Desktop\\\\myreadsproject\\\\myreads\\\\starter\\\\src\\\\components\\\\SearchBooks.js\",\n    _s = $RefreshSig$();\n\nimport React, { Fragment, useEffect, useState } from \"react\"; // import {Link} from 'react-router-dom'\n\nimport Book from \"./Book\";\nimport { search } from \"../BooksAPI\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst SearchBooks = _ref => {\n  _s();\n\n  let {\n    moveAtherShelf\n  } = _ref;\n  const [books, setBooks] = useState([]);\n  const [allBooks, setAllBooks] = useState([]);\n  const [value, setValue] = useState(\"\");\n  let loading;\n  useEffect(() => {\n    loading = true;\n\n    if (value) {\n      const dataFetch = async () => {\n        const res = await search(value);\n\n        if (res.error) {\n          setBooks([]);\n        } else {\n          setBooks(res);\n        }\n      };\n\n      dataFetch();\n    }\n\n    const clear = () => {\n      return loading = false;\n    };\n\n    clear();\n  }, [value]);\n  useEffect(() => {\n    const allData = async () => {\n      const res = await getAll();\n      return setAllBooks(res);\n    };\n\n    allData();\n  });\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: value,\n      onChange: e => setValue(e.target.value),\n      placeholder: \"Search by title, author, or ISBN\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bookshelf-books\",\n      children: /*#__PURE__*/_jsxDEV(\"ol\", {\n        className: \"books-grid\",\n        children: books.map(bb => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [\" \", /*#__PURE__*/_jsxDEV(Book, {\n            book: bb,\n            moveAtherShelf: moveAtherShelf\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 15\n          }, this)]\n        }, bb.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n};\n\n_s(SearchBooks, \"XmJlGB5+7dyLsGzzU3uBUdwo3Ic=\");\n\n_c = SearchBooks;\nexport default SearchBooks;\n\nvar _c;\n\n$RefreshReg$(_c, \"SearchBooks\");","map":{"version":3,"sources":["C:/Users/achme/OneDrive/Desktop/myreadsproject/myreads/starter/src/components/SearchBooks.js"],"names":["React","Fragment","useEffect","useState","Book","search","SearchBooks","moveAtherShelf","books","setBooks","allBooks","setAllBooks","value","setValue","loading","dataFetch","res","error","clear","allData","getAll","e","target","map","bb","id"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,EAAqCC,QAArC,QAAqD,OAArD,C,CACA;;AACA,OAAOC,IAAP,MAAiB,QAAjB;AACA,SAASC,MAAT,QAAuB,aAAvB;;;AAEA,MAAMC,WAAW,GAAG,QAAwB;AAAA;;AAAA,MAAvB;AAAEC,IAAAA;AAAF,GAAuB;AAC1C,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBN,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACO,QAAD,EAAWC,WAAX,IAA0BR,QAAQ,CAAC,EAAD,CAAxC;AAEA,QAAM,CAACS,KAAD,EAAQC,QAAR,IAAoBV,QAAQ,CAAC,EAAD,CAAlC;AAEA,MAAIW,OAAJ;AACAZ,EAAAA,SAAS,CAAC,MAAM;AACdY,IAAAA,OAAO,GAAG,IAAV;;AACA,QAAIF,KAAJ,EAAW;AACT,YAAMG,SAAS,GAAG,YAAY;AAC5B,cAAMC,GAAG,GAAG,MAAMX,MAAM,CAACO,KAAD,CAAxB;;AACA,YAAII,GAAG,CAACC,KAAR,EAAe;AACbR,UAAAA,QAAQ,CAAC,EAAD,CAAR;AACD,SAFD,MAEO;AACLA,UAAAA,QAAQ,CAACO,GAAD,CAAR;AACD;AACF,OAPD;;AAQAD,MAAAA,SAAS;AACV;;AAED,UAAMG,KAAK,GAAG,MAAM;AAClB,aAAQJ,OAAO,GAAG,KAAlB;AACD,KAFD;;AAGAI,IAAAA,KAAK;AACN,GAlBQ,EAkBN,CAACN,KAAD,CAlBM,CAAT;AAoBAV,EAAAA,SAAS,CAAC,MAAK;AAEb,UAAMiB,OAAO,GAAG,YAAY;AACxB,YAAMH,GAAG,GAAG,MAAMI,MAAM,EAAxB;AACD,aAAQT,WAAW,CAACK,GAAD,CAAnB;AACA,KAHH;;AAIEG,IAAAA,OAAO;AAGZ,GATU,CAAT;AAWA,sBACE,QAAC,QAAD;AAAA,4BACE;AACE,MAAA,IAAI,EAAC,MADP;AAEE,MAAA,KAAK,EAAEP,KAFT;AAGE,MAAA,QAAQ,EAAGS,CAAD,IAAOR,QAAQ,CAACQ,CAAC,CAACC,MAAF,CAASV,KAAV,CAH3B;AAIE,MAAA,WAAW,EAAC;AAJd;AAAA;AAAA;AAAA;AAAA,YADF,eAQE;AAAK,MAAA,SAAS,EAAC,iBAAf;AAAA,6BACE;AAAI,QAAA,SAAS,EAAC,YAAd;AAAA,kBACGJ,KAAK,CAACe,GAAN,CAAWC,EAAD,iBACT;AAAA,qBACG,GADH,eAEE,QAAC,IAAD;AAAM,YAAA,IAAI,EAAEA,EAAZ;AAAgB,YAAA,cAAc,EAAEjB;AAAhC;AAAA;AAAA;AAAA;AAAA,kBAFF;AAAA,WAASiB,EAAE,CAACC,EAAZ;AAAA;AAAA;AAAA;AAAA,gBADD;AADH;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YARF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAqBD,CA3DD;;GAAMnB,W;;KAAAA,W;AA6DN,eAAeA,WAAf","sourcesContent":["import React, { Fragment, useEffect, useState } from \"react\";\r\n// import {Link} from 'react-router-dom'\r\nimport Book from \"./Book\";\r\nimport { search } from \"../BooksAPI\";\r\n\r\nconst SearchBooks = ({ moveAtherShelf }) => {\r\n  const [books, setBooks] = useState([]);\r\n  const [allBooks, setAllBooks] = useState([])\r\n\r\n  const [value, setValue] = useState(\"\");\r\n\r\n  let loading;\r\n  useEffect(() => {\r\n    loading = true;\r\n    if (value) {\r\n      const dataFetch = async () => {\r\n        const res = await search(value);\r\n        if (res.error) {\r\n          setBooks([]);\r\n        } else {\r\n          setBooks(res);\r\n        }\r\n      };\r\n      dataFetch();\r\n    }\r\n\r\n    const clear = () => {\r\n      return (loading = false);\r\n    };\r\n    clear();\r\n  }, [value]);\r\n\r\n  useEffect(()=> {\r\n\r\n    const allData = async () => {\r\n        const res = await getAll();\r\n       return  setAllBooks(res)\r\n      }\r\n      allData();\r\n\r\n\r\n})\r\n\r\n  return (\r\n    <Fragment>\r\n      <input\r\n        type=\"text\"\r\n        value={value}\r\n        onChange={(e) => setValue(e.target.value)}\r\n        placeholder=\"Search by title, author, or ISBN\"\r\n      />\r\n\r\n      <div className=\"bookshelf-books\">\r\n        <ol className=\"books-grid\">\r\n          {books.map((bb) => (\r\n            <li key={bb.id}>\r\n              {\" \"}\r\n              <Book book={bb} moveAtherShelf={moveAtherShelf} />\r\n            </li>\r\n          ))}\r\n        </ol>\r\n      </div>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default SearchBooks;\r\n"]},"metadata":{},"sourceType":"module"}